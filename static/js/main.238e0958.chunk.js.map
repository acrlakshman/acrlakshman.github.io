{"version":3,"sources":["icons/googlescholar.svg","icons/github.svg","icons/gitlab.svg","icons/linkedin.svg","icons/youtube.svg","icons/vimeo.svg","icons/twitter.svg","icons/facebook.svg","icons/twitch.svg","types/fields.ts","components/themes/basic/SectionLabel.tsx","components/themes/basic/Content.tsx","components/themes/basic/SectionDivider.tsx","types/themes.ts","components/themes/basic/LoadSpinner.tsx","components/themes/basic/Section.tsx","components/themes/basic/Header.tsx","components/themes/basic/SectionBody.tsx","components/themes/basic/SocialProfiles.tsx","components/themes/basic/Introduction.tsx","components/themes/basic/Body.tsx","components/themes/basic/Footer.tsx","components/themes/basic/ranking.ts","components/themes/basic/Home.tsx","auxiliaries/rankSections.ts","components/Home.tsx","components/themes/basic/List.tsx","components/List.tsx","components/themes/basic/Project.tsx","components/Project.tsx","components/themes/basic/Publication.tsx","components/Publication.tsx","components/themes/basic/Custom.tsx","components/Custom.tsx","components/App.tsx","reducers/index.ts","index.tsx","auxiliaries/regex-weburl.js","config.ts","components/Markdown.tsx","auxiliaries/regex.ts"],"names":["module","exports","ProfileField","PublicationTypes","ThesisTypes","SocialProfileTypes","SectionLabel","label","useSpring","scale","setScale","className","onMouseEnter","onMouseLeave","p","style","transform","interpolate","range","output","Content","props","id","children","Divider","WebThemes","ResumeThemes","LoadSpinner","above","below","Spinner","animation","sectionListHasRender","sectionDetail","i","list","length","render","sectionCustomHasRender","LoadableSectionExperience","loadable","fallback","LoadableSectionEducation","LoadableSectionPublications","LoadableSectionProjects","LoadableSectionGallery","LoadableSectionCustom","Section","renderSection","sectionName","Work","renderDividerAboveLabel","Education","Publications","limitItemsToRender","Projects","Gallery","renderCustomSection","key","Custom","value","class","content","renderItem","sections","Array","map","section","index","this","Component","Header","setNavExpanded","expanded","setState","navExpanded","closeNav","scrollLinkNav","scrollToId","text","activeClass","to","spy","smooth","hashSpy","offset","duration","delay","isDynamic","onClick","renderNavLink","Basics","basics","summary","publications","projects","gallery","work","Nav","Link","Navbar","fixed","bg","variant","expand","onToggle","state","Brand","name","Toggle","aria-controls","renderSectionsInNavBar","Collapse","sectionRanks","item","href","connect","SectionBody","Markdown","IconLink","profile","logo","alt","title","url","username","network","GoogleScholar","GitHub","GitLab","LinkedIn","YouTube","Vimeo","Twitter","Facebook","Twitch","getSocialProfileUrl","paddingLeft","paddingRight","img","src","width","SocialProfiles","profiles","ButtonGroup","size","GoogleScholarLogo","GitHubLogo","GitLabLogo","LinkedInLogo","YouTubeLogo","VimeoLogo","TwitterLogo","FacebookLogo","TwitchLogo","renderProfileItem","LoadableAvatar","Introduction","getLabelElement","getSummary","image","Body","renderSections","config","Footer","Date","getFullYear","meta","hideFooterCredit","Ranking","Home","renderBody","theme","padding","background","profileRanksTheme","profileRanksUser","sectionRanksUser","profileRankings","keys","Object","r","_","get","rank","getProfileRankings","sectionRanksTheme","chain","val","count","sortBy","keyBy","mapValues","renderPage","BASIC","history","listen","location","analytics","ga","enable","ReactGA","initialize","trackingId","set","page","pathname","pageview","profileSectionName","profileSectionData","renderDividerBelowLabel","List","getProfileSection","slug","data","match","replace","window","scrollTo","slugMap","LoadableMarkdown","Project","renderContent","webPage","detail","margin","pageContent","idx","position","params","Publication","custom","App","basename","process","exact","path","component","reducers","combineReducers","profileResume","profileResumeData","profileWebData","Config","SlugMap","omit","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","re_weburl","RegExp","imagesPath","videosPath","filesPath","maxItemsToRenderInHomePage","MyGallery","images","startIndex","items","slideOnThumbnailOver","componentMounted","imageCounter","renderImage","imageProps","imageAlt","imageSrc","imageTitle","imageCount","test","original","thumbnail","showModal","imageStartIndex","renderCode","codeProps","language","renderLink","linkProps","videoUrl","isLinkAFile","renderers","imageReference","code","link","linkReference","renderSectionBody","source","Modal","show","onHide","centered"],"mappings":"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","file":"static/js/main.238e0958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/googlescholar.4841811a.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/gitlab.e5137aba.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.619231ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.d57a47e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/vimeo.9d516b2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.be066898.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.b9173756.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitch.a734a864.svg\";","export enum ProfileField {\n  Config = 'config',\n  Basics = 'basics',\n  Work = 'work',\n  Education = 'education',\n  Projects = 'projects',\n  Awards = 'awards',\n  Publications = 'publications',\n  Gallery = 'gallery',\n  Skills = 'skills',\n  Languages = 'languages',\n  Interests = 'interests',\n  References = 'references',\n  Custom = 'custom',\n  SlugMap = 'slugMap',\n}\n\nexport enum PublicationTypes {\n  Article = 'article',\n  Book = 'book',\n  Thesis = 'thesis',\n  TechReport = 'techreport',\n  InCollection = 'incollection',\n  Misc = 'misc',\n  UnPublished = 'unpublished',\n}\n\nexport enum ThesisTypes {\n  PhD = 'phd',\n  Masters = 'masters',\n  Bachelors = 'bachelors',\n}\n\nexport enum SocialProfileTypes {\n  GoogleScholar = 'googlescholar',\n  GitHub = 'github',\n  GitLab = 'gitlab',\n  LinkedIn = 'linkedin',\n  YouTube = 'youtube',\n  Vimeo = 'vimeo',\n  Twitter = 'twitter',\n  Facebook = 'facebook',\n  Twitch = 'twitch',\n}","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nimport './styles.css';\n\ninterface Props {\n  label?: string;\n}\n\nconst SectionLabel = ({ label }: Props): JSX.Element => {\n  const [{ scale }, setScale] = useSpring(() => ({ scale: '0' }));\n\n  return (\n    <div className=\"content-header\">\n      <p\n        onMouseEnter={() => setScale({ scale: '1' })}\n        onMouseLeave={() => setScale({ scale: '0' })}\n        className=\"content-header-text\"\n      >\n        <animated.p\n          style={{\n            transform: scale\n              .interpolate({\n                range: [0, 1],\n                output: [1, 1.25],\n              })\n              .interpolate((scale) => `scale(${scale})`),\n          }}\n        >\n          {label}\n        </animated.p>\n      </p>\n    </div>\n  );\n};\n\nexport default SectionLabel;\n","import React, { FunctionComponent } from 'react';\n\ninterface Props {\n  id: string\n}\n\nconst Content: FunctionComponent<Props> = (props) => {\n  return (\n    <section id={props.id} className=\"content-section\">\n      <div className=\"container bg-white\">\n        <div className=\"content\">{props.children}</div>\n      </div>\n    </section>\n  );\n};\n\nexport default Content;\n","import React from 'react';\n\nimport './styles.css';\n\nconst Divider = () => {\n  return (\n    <div className=\"divider\">\n      <span></span>\n      <span>&#10038;</span>\n      <span></span>\n    </div>\n  );\n};\n\nexport default Divider;\n","export enum WebThemes {\n  BASIC = 'basic',\n}\n\nexport enum ResumeThemes {\n  BASIC = 'basic',\n}\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport Content from './Content';\nimport Divider from './SectionDivider';\nimport SectionLabel from './SectionLabel';\n\nconst LoadSpinner = ({\n  above,\n  below,\n  label = '',\n}: {\n  above?: boolean;\n  below?: boolean;\n  label?: string;\n}) => {\n  return (\n    <Content id={'spinner'}>\n      {above && <Divider />}\n      <SectionLabel label={label} />\n      {below && <Divider />}\n      <Spinner animation=\"border\" />\n    </Content>\n  );\n};\n\nexport default LoadSpinner;\n","import React, { Component } from 'react';\nimport loadable from '@loadable/component';\nimport LoadSpinner from './LoadSpinner';\n\nimport {\n  CustomSection,\n  ProfileCustomSection,\n  ProfileSections,\n  ProfileSectionsWeb,\n  Projects,\n  Publications,\n  Gallery,\n  Education,\n  Work,\n} from '../../../types/profileWeb';\nimport { ProfileField } from '../../../types/fields';\n\nimport './styles.css';\n\ninterface Props {\n  sectionName: string;\n  sections: ProfileSectionsWeb;\n}\n\nexport const sectionListHasRender = <\n  T extends ProfileSections[K],\n  K extends keyof ProfileSections\n>(\n  sectionDetail: T\n): boolean => {\n  if (sectionDetail) {\n    for (let i = 0; i < sectionDetail.list.length; i++) {\n      if (sectionDetail.list[i].render) return true;\n    }\n  }\n\n  return false;\n};\n\nconst sectionCustomHasRender = <T extends ProfileCustomSection[K], K extends keyof ProfileCustomSection>(sectionDetail: T): boolean => {\n  if (sectionDetail) {\n    for (let i = 0; i < sectionDetail.length; i++) {\n      if (sectionDetail[i].render) return true;\n    }\n  }\n\n  return false;\n}\n\nconst LoadableSectionExperience = loadable(\n  () => import('./SectionExperience'),\n  {\n    fallback: <LoadSpinner above={true} label={'Experience'} />,\n  }\n);\n\nconst LoadableSectionEducation = loadable(() => import('./SectionEducation'), {\n  fallback: <LoadSpinner above={true} label={'Education'} />,\n});\n\nconst LoadableSectionPublications = loadable(\n  () => import('./SectionPublications'),\n  {\n    fallback: <LoadSpinner above={true} label={'Publications'} />,\n  }\n);\n\nconst LoadableSectionProjects = loadable(() => import('./SectionProjects'), {\n  fallback: <LoadSpinner above={true} label={'Publications'} />,\n});\n\nconst LoadableSectionGallery = loadable(() => import('./SectionGallery'), {\n  fallback: <LoadSpinner above={true} label={'Publications'} />,\n});\n\nconst LoadableSectionCustom = loadable(() => import('./SectionCustom'), {\n  fallback: <LoadSpinner above={true} label={'Publications'} />,\n});\n\nclass Section extends Component<Props> {\n  renderSection = <\n    T extends ProfileSections[K],\n    K extends keyof ProfileSections\n  >(\n    sectionDetail: T\n  ): JSX.Element | undefined => {\n    if (sectionDetail) {\n      switch (this.props.sectionName) {\n        case ProfileField.Work:\n          return (\n            <LoadableSectionExperience\n              sectionDetail={sectionDetail as Work}\n              renderDividerAboveLabel={true}\n            />\n          );\n        case ProfileField.Education:\n          return (\n            <LoadableSectionEducation\n              sectionDetail={sectionDetail as Education}\n              renderDividerAboveLabel={true}\n            />\n          );\n        case ProfileField.Publications:\n          return (\n            <LoadableSectionPublications\n              sectionDetail={sectionDetail as Publications}\n              limitItemsToRender={true}\n              renderDividerAboveLabel={true}\n            />\n          );\n        case ProfileField.Projects:\n          return (\n            <LoadableSectionProjects\n              sectionDetail={sectionDetail as Projects}\n              limitItemsToRender={true}\n              renderDividerAboveLabel={true}\n            />\n          );\n        case ProfileField.Gallery:\n          return (\n            <LoadableSectionGallery sectionDetail={sectionDetail as Gallery} />\n          );\n        default:\n          return <div></div>;\n      }\n    }\n  };\n\n  renderCustomSection = (sectionDetail: CustomSection, key: string) => {\n    if (\n      sectionDetail &&\n      this.props.sectionName === ProfileField.Custom &&\n      sectionDetail.render\n    ) {\n      if (sectionDetail.value) {\n        return (\n          <LoadableSectionCustom\n            class=\"\"\n            id={sectionDetail.label}\n            key={key}\n            label={sectionDetail.label}\n            content={sectionDetail.value}\n          />\n        );\n      }\n    }\n  };\n\n  renderItem = () => {\n    let sectionName = this.props.sectionName as keyof ProfileSectionsWeb;\n    let sectionDetail = this.props.sections[sectionName];\n\n    if (sectionDetail && !(sectionDetail instanceof Array)) {\n      if (sectionListHasRender(sectionDetail)) {\n        return this.renderSection(sectionDetail)\n      }\n    } else if (sectionDetail instanceof Array) {\n      if (sectionCustomHasRender(sectionDetail)) {\n        return sectionDetail.map((section: CustomSection, index: number) => {\n            return this.renderCustomSection(section, `${this.props.sectionName}_${index}`)\n          });\n      }\n    }\n  };\n\n  render() {\n    return <>{this.renderItem()}</>;\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Link as ScrollLink } from 'react-scroll';\nimport { StoreState } from '../../../reducers';\nimport { sectionListHasRender } from './Section';\n\nimport { Basics, ProfileSectionsWeb } from '../../../types/profileWeb';\nimport { ProfileField } from '../../../types/fields';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  sectionRanks?: string[];\n  renderSectionsInNavBar: boolean;\n  basics: Basics;\n  sections: ProfileSectionsWeb;\n}\n\ninterface ComponentState {\n  navExpanded: boolean;\n}\n\nclass Header extends Component<ComponentProps, ComponentState> {\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { navExpanded: false };\n  }\n\n  setNavExpanded = (expanded: boolean) => {\n    this.setState({ navExpanded: expanded });\n  };\n\n  closeNav = () => {\n    this.setState({ navExpanded: false });\n  };\n\n  scrollLinkNav = (scrollToId: string, text: string): JSX.Element => {\n    return (\n      <ScrollLink\n        activeClass=\"active\"\n        to={scrollToId}\n        className=\"nav-link active\"\n        spy={true}\n        smooth={true}\n        hashSpy={true}\n        offset={-75}\n        duration={1000}\n        delay={100}\n        isDynamic={true}\n        onClick={this.closeNav}\n      >\n        {text}\n      </ScrollLink>\n    );\n  };\n\n  renderNavLink = (section: string): JSX.Element | undefined => {\n    // TODO: optimize this.\n    let id = '';\n    let text = '';\n    let render = false;\n\n    switch (section) {\n      case ProfileField.Basics as string:\n        id = 'introduction';\n        text = this.props.basics.summary.label;\n        render = true;\n        break;\n\n      case ProfileField.Publications as string:\n        id = ProfileField.Publications as string;\n        if (this.props.sections.publications) {\n          text = this.props.sections.publications.label;\n          render = sectionListHasRender(this.props.sections.publications);\n        }\n        break;\n\n      case ProfileField.Projects as string:\n        id = ProfileField.Projects as string;\n        if (this.props.sections.projects) {\n          text = this.props.sections.projects.label;\n          render = sectionListHasRender(this.props.sections.projects);\n        }\n        break;\n\n      case ProfileField.Gallery as string:\n        id = ProfileField.Gallery as string;\n        if (this.props.sections.gallery) {\n          text = this.props.sections.gallery.label;\n          render = sectionListHasRender(this.props.sections.gallery);\n        }\n        break;\n\n      case ProfileField.Work as string:\n        id = ProfileField.Work as string;\n        if (this.props.sections.work) {\n          text = this.props.sections.work.label;\n          render = sectionListHasRender(this.props.sections.work);\n        }\n        break;\n\n      default:\n    }\n\n    if (render) {\n      return <Nav.Link>{this.scrollLinkNav(id, text)}</Nav.Link>;\n    }\n  };\n\n  renderItem = (): JSX.Element => {\n    return (\n      <>\n        <Navbar\n          fixed=\"top\"\n          bg=\"primary\"\n          variant=\"dark\"\n          expand=\"md\"\n          onToggle={this.setNavExpanded}\n          expanded={this.state.navExpanded}\n        >\n          <div className=\"container-fluid\">\n            <Link to=\"/\" className=\"text-truncate\">\n              <Navbar.Brand>\n                <strong>{this.props.basics.name.value}</strong>\n              </Navbar.Brand>\n            </Link>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            {this.props.renderSectionsInNavBar &&\n              ((): JSX.Element => (\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"ml-auto\">\n                    {this.renderNavLink(ProfileField.Basics)}\n                    {this.props.sectionRanks\n                      ? this.props.sectionRanks.map((item: string) => {\n                          return this.renderNavLink(item);\n                        })\n                      : ''}\n                    <Nav.Link href=\"/files/resume.pdf\">\n                      <p className=\"nav-link active\">CV</p>\n                    </Nav.Link>\n                  </Nav>\n                </Navbar.Collapse>\n              ))()}\n          </div>\n        </Navbar>\n      </>\n    );\n  };\n\n  render() {\n    return this.renderItem();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return { basics: state.basics, sections: state.sections };\n};\n\nexport default connect(mapStateToProps, {})(Header);\n","import React from 'react';\nimport Markdown from '../../Markdown';\n\ninterface Props {\n  class: string\n  value: string\n}\n\nconst SectionBody = (props: Props): JSX.Element => {\n  return (\n    <div className=\"content-body\">\n      <div className={props.class}>\n        <Markdown className=\"content-body markdown\" content={props.value} />\n      </div>\n    </div>\n  );\n};\n\nexport default SectionBody;\n","import React, { FunctionComponent } from 'react';\nimport { ButtonGroup } from 'react-bootstrap';\nimport { useSpring, animated } from 'react-spring';\n\nimport { SocialProfile } from '../../../types/profileWeb';\nimport { SocialProfileTypes } from '../../../types/fields';\nimport GoogleScholarLogo from '../../../icons/googlescholar.svg';\nimport GitHubLogo from '../../../icons/github.svg';\nimport GitLabLogo from '../../../icons/gitlab.svg';\nimport LinkedInLogo from '../../../icons/linkedin.svg';\nimport YouTubeLogo from '../../../icons/youtube.svg';\nimport VimeoLogo from '../../../icons/vimeo.svg';\nimport TwitterLogo from '../../../icons/twitter.svg';\nimport FacebookLogo from '../../../icons/facebook.svg';\nimport TwitchLogo from '../../../icons/twitch.svg';\n\ninterface ComponentProps {\n  profiles: SocialProfile[];\n}\n\nconst getSocialProfileUrl = (network: string, username: string): string => {\n  switch (network) {\n    case SocialProfileTypes.GoogleScholar as string:\n      return `https://scholar.google.com/citations?user=${username}`;\n\n    case SocialProfileTypes.GitHub as string:\n      return `https://github.com/${username}`;\n\n    case SocialProfileTypes.GitLab as string:\n      return `https://gitlab.com/${username}`;\n\n    case SocialProfileTypes.LinkedIn as string:\n      return `https://www.linkedin.com/in/${username}/`;\n\n    case SocialProfileTypes.YouTube as string:\n      return `https://www.youtube.com/channel/${username}`;\n\n    case SocialProfileTypes.Vimeo as string:\n      return `https://vimeo.com/${username}`;\n\n    case SocialProfileTypes.Twitter as string:\n      return `https://twitter.com/${username}`;\n\n    case SocialProfileTypes.Facebook as string:\n      return `https://www.facebook.com/${username}`;\n\n    case SocialProfileTypes.Twitch as string:\n      return `https://www.twitch.tv/${username}`;\n\n    default:\n      return '';\n  }\n};\n\ninterface IconLinkProps {\n  profile: SocialProfile;\n  logo: string;\n  alt: string;\n  title: string;\n}\n\nconst IconLink: FunctionComponent<IconLinkProps> = ({\n  profile,\n  logo,\n  alt,\n  title,\n}: IconLinkProps): JSX.Element => {\n  const [{ scale }, setScale] = useSpring(() => ({ scale: '0' }));\n\n  let url = profile.value.url;\n  if (!url && profile.value.username) {\n    url = getSocialProfileUrl(profile.value.network, profile.value.username);\n  }\n\n  return (\n    <a\n      onMouseEnter={() => setScale({ scale: '1' })}\n      onMouseLeave={() => setScale({ scale: '0' })}\n      href={url}\n      style={{ paddingLeft: '.5rem', paddingRight: '.5rem' }}\n    >\n      <animated.img\n        src={logo}\n        alt={alt}\n        title={title}\n        style={{\n          width: \"25px\",\n          transform: scale\n            .interpolate({\n              range: [0, 1],\n              output: [1, 1.5],\n            })\n            .interpolate((scale) => `scale(${scale})`),\n        }}\n      />\n    </a>\n  );\n};\n\nconst renderProfileItem = (profile: SocialProfile): JSX.Element | undefined => {\n  if (profile.render) {\n    switch (profile.value.network) {\n      case SocialProfileTypes.GoogleScholar as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={GoogleScholarLogo}\n            alt={SocialProfileTypes.GoogleScholar as string}\n            title={SocialProfileTypes.GoogleScholar as string}\n          />\n        );\n\n      case SocialProfileTypes.GitHub as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={GitHubLogo}\n            alt={SocialProfileTypes.GitHub as string}\n            title={SocialProfileTypes.GitHub as string}\n          />\n        );\n\n      case SocialProfileTypes.GitLab as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={GitLabLogo}\n            alt={SocialProfileTypes.GitLab as string}\n            title={SocialProfileTypes.GitLab as string}\n          />\n        );\n\n      case SocialProfileTypes.LinkedIn as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={LinkedInLogo}\n            alt={SocialProfileTypes.LinkedIn as string}\n            title={SocialProfileTypes.LinkedIn as string}\n          />\n        );\n\n      case SocialProfileTypes.YouTube as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={YouTubeLogo}\n            alt={SocialProfileTypes.YouTube as string}\n            title={SocialProfileTypes.YouTube as string}\n          />\n        );\n\n      case SocialProfileTypes.Vimeo as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={VimeoLogo}\n            alt={SocialProfileTypes.Vimeo as string}\n            title={SocialProfileTypes.Vimeo as string}\n          />\n        );\n\n      case SocialProfileTypes.Twitter as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={TwitterLogo}\n            alt={SocialProfileTypes.Twitter as string}\n            title={SocialProfileTypes.Twitter as string}\n          />\n        );\n\n      case SocialProfileTypes.Facebook as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={FacebookLogo}\n            alt={SocialProfileTypes.Facebook as string}\n            title={SocialProfileTypes.Facebook as string}\n          />\n        );\n\n      case SocialProfileTypes.Twitch as string:\n        return (\n          <IconLink\n            key={profile.value.network}\n            profile={profile}\n            logo={TwitchLogo}\n            alt={SocialProfileTypes.Twitch as string}\n            title={SocialProfileTypes.Twitch as string}\n          />\n        );\n\n      default:\n        return;\n    }\n  }\n};\n\nconst SocialProfiles: FunctionComponent<ComponentProps> = ({\n  profiles,\n}: ComponentProps) => {\n  return (\n    // <section id=\"social-presence\" className=\"content-section\">\n    //   <div className=\"container\">\n    //     <div className=\"content\">\n    <>\n          <ButtonGroup size=\"lg\" className=\"mb-2\">\n            {profiles.map((profile) => renderProfileItem(profile))}\n          </ButtonGroup>\n          </>\n    //     </div>\n    //   </div>\n    // </section>\n  );\n};\n\nexport default SocialProfiles;\n","import React, { Component } from 'react';\nimport loadable from '@loadable/component';\nimport LoadSpinner from './LoadSpinner';\nimport SectionLabel from './SectionLabel'\nimport SectionBody from './SectionBody';\nimport SocialProfiles from './SocialProfiles';\n\nimport { Basics, BasicValueType } from '../../../types/profileWeb';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  basics: Basics\n}\n\ninterface ComponentState {\n  image: string\n}\n\n\nconst LoadableAvatar = loadable(() => import('./Avatar'), {\n  fallback: <LoadSpinner label={''} />,\n});\n\nclass Introduction extends Component<ComponentProps, ComponentState> {\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { image: '' };\n  }\n\n  getLabelElement = (label: BasicValueType) => {\n    if (label.render) {\n      return (\n        <div className=\"text-center label\">\n          <p>{label.value}</p>\n        </div>\n      );\n    }\n  };\n\n  getSummary = (summary: BasicValueType) => {\n    if (summary.render) {\n      return (\n        <section id=\"introduction\" className=\"content-section\">\n          <div className=\"container bg-white\">\n            <div className=\"container main-container\">\n              <div className=\"content\">\n                <SectionLabel label={summary.label} />\n                <SectionBody class=\"summary text-left\" value={summary.value} />\n              </div>\n            </div>\n          </div>\n        </section>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <section className=\"content-section introduction\">\n          <div className=\"container\">\n            <LoadableAvatar image={this.props.basics.image} />\n            {this.getLabelElement(this.props.basics.label)}\n            <SocialProfiles profiles={this.props.basics.profiles} />\n          </div>\n        </section>\n        <div className=\"divider\"></div>\n        {this.getSummary(this.props.basics.summary)}\n      </div>\n    );\n  }\n}\n\nexport default Introduction;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { StoreState } from '../../../reducers';\nimport Introduction from './Introduction';\nimport Section from './Section';\n\nimport { Basics, ProfileSectionsWeb } from '../../../types/profileWeb';\n\ninterface ComponentProps {\n  basics: Basics;\n  sections: ProfileSectionsWeb;\n  sectionRanks: string[];\n}\n\nclass Body extends Component<ComponentProps> {\n  renderSections = () => {\n    return this.props.sectionRanks.map((section: string) => {\n      return (\n        <Section\n          key={section}\n          sectionName={section}\n          sections={this.props.sections}\n        />\n      );\n    });\n  };\n\n  renderItem = () => {\n    return (\n      <>\n        <Introduction basics={this.props.basics} />\n        {this.renderSections()}\n      </>\n    );\n  };\n\n  render() {\n    return this.renderItem();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    basics: state.basics,\n    sections: state.sections,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Body);\n","import React, { FunctionComponent } from 'react';\nimport { AiOutlineCopyrightCircle } from 'react-icons/ai';\n\nimport { Config, Basics } from '../../../types/profileWeb';\n\ninterface ComponentProps {\n  config: Config;\n  basics: Basics;\n}\n\nconst Footer: FunctionComponent<React.PropsWithChildren<ComponentProps>> = (\n  props: React.PropsWithChildren<ComponentProps>\n) => {\n  return (\n    <>\n      <footer className=\"rounded\">\n        <div className=\"container d-flex justify-content-between flex-wrap\">\n          <div className=\"footer-content d-flex align-items-center flex-wrap\">\n            <AiOutlineCopyrightCircle />\n            &nbsp;{new Date().getFullYear()}&nbsp;{props.basics.name.value}\n          </div>\n          {props.config.meta && props.config.meta.hideFooterCredit ? (\n            <div></div>\n          ) : (\n            <div>\n              Generated using{' '}\n              <a href=\"https://github.com/acrlakshman/profileio\">ProfileIO</a>\n            </div>\n          )}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import { ProfileSectionsWebSkeleton } from '../../../types/profileWeb';\n\nconst Ranking: ProfileSectionsWebSkeleton = {\n  projects: 2,\n  gallery: 3,\n  publications: 1,\n};\n\nexport default Ranking;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { StoreState } from '../../../reducers';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport {\n  getSortedArray,\n  getProfileRankings,\n} from '../../../auxiliaries/rankSections';\nimport sectionRanksTheme from './ranking';\n\nimport { Basics, Config, ProfileSectionsWeb } from '../../../types/profileWeb';\n\ninterface ComponentProps {\n  config: Config;\n  basics: Basics;\n  sections: ProfileSectionsWeb;\n}\n\ninterface ComponentState {\n  sectionRanks: string[];\n}\n\nclass Home extends Component<ComponentProps, ComponentState> {\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { sectionRanks: [] };\n  }\n\n  componentDidMount() {\n    let sectionRanksUser = getProfileRankings(this.props.sections);\n    let sectionRanks = getSortedArray(sectionRanksTheme, sectionRanksUser);\n    this.setState({ sectionRanks });\n  }\n\n  renderBody = (): JSX.Element => {\n    return <Body sectionRanks={this.state.sectionRanks} />;\n  };\n\n  renderItem = () => {\n    if (this.props.config.theme.render) {\n      return (\n        <div className=\"wrapper-0\">\n          <div className=\"wrapper-1 rounded\">\n            <Header\n              sectionRanks={this.state.sectionRanks}\n              renderSectionsInNavBar={true}\n            />\n            {this.renderBody()}\n          </div>\n          <section\n            className=\"content-section\"\n            style={{ padding: '1.5rem 0 1.5rem 0', background: 'transparent' }}\n          ></section>\n          <Footer config={this.props.config} basics={this.props.basics} />\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return this.renderItem();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    basics: state.basics,\n    sections: state.sections,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Home);\n","import {\n  ProfileSectionsWeb,\n  ProfileSectionsWebSkeleton,\n} from '../types/profileWeb';\nimport _ from 'lodash';\n\n// It takes profile in json (excluding config, basics) and returns {work: 1, publications: 2, ...}.\nexport const getProfileRankings = (\n  profile: ProfileSectionsWeb\n): ProfileSectionsWebSkeleton => {\n  let profileRankings: ProfileSectionsWebSkeleton = {};\n  if (profile) {\n    let keys = Object.keys(profile) as Array<keyof ProfileSectionsWeb>;\n\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      let r = _.get(profile, [key, 'rank']);\n      let rank: number = r ? r : 9999;\n      profileRankings[key] = rank;\n    }\n  }\n\n  return profileRankings;\n};\n\nexport const getSortedArray = (\n  profileRanksTheme: ProfileSectionsWebSkeleton,\n  profileRanksUser: ProfileSectionsWebSkeleton\n) => {\n  // Ref.: https://stackoverflow.com/questions/32349838/lodash-sorting-object-by-values-without-losing-the-key\n  return Object.keys(\n    _.chain({ ...profileRanksTheme, ...profileRanksUser })\n      .map((val, key) => {\n        return { name: key, count: val };\n      })\n      .sortBy('count')\n      .keyBy('name')\n      .mapValues('count')\n      .value()\n  ) as Array<keyof ProfileSectionsWeb>;\n};\n","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ReactGA from 'react-ga';\nimport { StoreState } from '../reducers';\nimport HomeBasic from './themes/basic/Home';\n\nimport { Config } from '../types/profileWeb';\nimport { WebThemes } from '../types/themes';\n\ninterface ComponentProps extends RouteComponentProps<{ id: string }> {\n  config: Config;\n}\n\nclass Home extends Component<ComponentProps> {\n  componentDidMount() {\n    this.props.history.listen((location) => {\n      if (\n        this.props.config.analytics &&\n        this.props.config.analytics.ga &&\n        this.props.config.analytics.ga.enable\n      ) {\n        ReactGA.initialize(this.props.config.analytics.ga.trackingId);\n        ReactGA.set({ page: location.pathname });\n        ReactGA.pageview(location.pathname);\n      }\n    });\n  }\n\n  renderPage = () => {\n    if (this.props.config.theme.render) {\n      switch (this.props.config.theme.value) {\n        case WebThemes.BASIC:\n          return <HomeBasic />;\n        default:\n          return <div></div>;\n      }\n    }\n\n    return <div></div>;\n  };\n\n  render() {\n    return this.renderPage();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return { config: state.config };\n};\n\nexport default connect(mapStateToProps, {})(Home);\n","import React, { Component } from 'react';\nimport loadable from '@loadable/component';\n\nimport {\n  Basics,\n  Config,\n  ProfileSections,\n  Projects as ProjectsType,\n  Publications as PublicationsType,\n} from '../../../types/profileWeb';\nimport { ProfileField } from '../../../types/fields';\n\nimport './styles.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport LoadSpinner from './LoadSpinner';\n\ninterface ComponentProps {\n  config: Config;\n  basics: Basics;\n  profileSectionName: string;\n  profileSectionData: PublicationsType | ProjectsType;\n}\n\nconst LoadableSectionPublications = loadable(\n  () => import('./SectionPublications'),\n  {\n    fallback: <LoadSpinner below={true} label={'Publications'} />,\n  }\n);\n\nconst LoadableSectionProjects = loadable(() => import('./SectionProjects'), {\n  fallback: <LoadSpinner below={true} label={'Publications'} />,\n});\n\nexport const sectionListHasRender = <\n  T extends ProfileSections[K],\n  K extends keyof ProfileSections\n>(\n  sectionDetail: T\n): boolean => {\n  if (sectionDetail) {\n    for (let i = 0; i < sectionDetail.list.length; i++) {\n      if (sectionDetail.list[i].render) return true;\n    }\n  }\n\n  return false;\n};\n\nconst renderBody = <\n  T extends ProfileSections[K],\n  K extends keyof ProfileSections\n>(\n  profileSectionName: string,\n  profileSectionData: T\n): JSX.Element => {\n  if (profileSectionData && sectionListHasRender(profileSectionData)) {\n    switch (profileSectionName) {\n      case ProfileField.Publications:\n        return (\n          <LoadableSectionPublications\n            sectionDetail={profileSectionData as PublicationsType}\n            limitItemsToRender={false}\n            renderDividerBelowLabel={true}\n          />\n        );\n      case ProfileField.Projects:\n        return (\n          <LoadableSectionProjects\n            sectionDetail={profileSectionData as ProjectsType}\n            limitItemsToRender={false}\n            renderDividerBelowLabel={true}\n          />\n        );\n      default:\n        return <div></div>;\n    }\n  } else {\n    return <div>No content to show</div>;\n  }\n};\n\nclass List extends Component<ComponentProps> {\n  renderPage = () => {\n    return (\n      <div className=\"wrapper-0\">\n        <div className=\"wrapper-1 rounded\">\n          <Header renderSectionsInNavBar={false} />\n          {renderBody(\n            this.props.profileSectionName,\n            this.props.profileSectionData\n          )}\n        </div>\n        <section\n          className=\"content-section\"\n          style={{ padding: '1.5rem 0 1.5rem 0', background: 'transparent' }}\n        ></section>\n        <Footer config={this.props.config} basics={this.props.basics} />\n      </div>\n    );\n  };\n\n  render() {\n    return <>{this.renderPage()}</>;\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { StoreState } from '../reducers';\nimport ListBasic from './themes/basic/List';\n\nimport {\n  Basics,\n  Config,\n  ProfileSectionsWeb,\n  Projects as ProjectsType,\n  Publications as PublicationsType,\n  SlugMap,\n} from '../types/profileWeb';\nimport { ProfileField } from '../types/fields';\nimport { WebThemes } from '../types/themes';\n\ninterface ComponentProps extends RouteComponentProps<{ id: string }> {\n  config: Config;\n  basics: Basics;\n  sections: ProfileSectionsWeb;\n  slugMap: SlugMap;\n}\n\ninterface ComponentState {\n  slug: string;\n}\n\nclass List extends Component<ComponentProps, ComponentState> {\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { slug: this.props.match.url.replace('/', '') };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  getProfileSection = (): PublicationsType | ProjectsType | undefined => {\n    const section = this.props.sections[\n      this.state.slug as ProfileField.Publications | ProfileField.Projects\n    ];\n\n    return section;\n  };\n\n  renderPage = () => {\n    if (this.props.config.theme.render) {\n      switch (this.props.config.theme.value) {\n        case WebThemes.BASIC:\n          const data = this.getProfileSection();\n          return data ? (\n            <ListBasic\n              config={this.props.config}\n              basics={this.props.basics}\n              profileSectionName={this.state.slug}\n              profileSectionData={data}\n            />\n          ) : (\n            <div></div>\n          );\n        default:\n          return <div></div>;\n      }\n    }\n\n    return <div></div>;\n  };\n\n  render() {\n    return this.renderPage();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    basics: state.basics,\n    sections: state.sections,\n    slugMap: state.slugMap,\n  };\n};\n\nexport default connect(mapStateToProps, {})(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport loadable from '@loadable/component';\nimport LoadSpinner from './LoadSpinner';\nimport SectionLabel from './SectionLabel';\nimport Content from './Content';\nimport Divider from './SectionDivider';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { StoreState } from '../../../reducers';\n\nimport { ProfileField } from '../../../types/fields';\nimport { Basics, Config, Project as ProjectType } from '../../../types/profileWeb';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  config: Config;\n  basics: Basics;\n  data: ProjectType;\n}\n\nconst LoadableMarkdown = loadable(() => import('../../Markdown'), {\n  fallback: <LoadSpinner below={true} label={''} />,\n});\n\nclass Project extends Component<ComponentProps> {\n  renderContent = (data: ProjectType): JSX.Element | undefined => {\n    if (data.webPage) {\n      const content = data.webPage.detail;\n      return (\n        <div\n          className=\"content-body text-left\"\n          style={{ margin: '2rem 2rem 0 2rem' }}\n        >\n          <LoadableMarkdown\n            className=\"content-body markdown\"\n            content={content}\n          />\n        </div>\n      );\n    }\n  };\n\n  renderBody = () => {\n    return (\n      <Content id={ProfileField.Projects}>\n        <SectionLabel label={this.props.data.name} />\n        <Divider />\n        {this.renderContent(this.props.data)}\n      </Content>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper-0\">\n        <div className=\"wrapper-1 rounded\">\n          <Header renderSectionsInNavBar={false} />\n          {this.renderBody()}\n        </div>\n        <section\n          className=\"content-section\"\n          style={{ padding: '1.5rem 0 1.5rem 0', background: 'transparent' }}\n        ></section>\n        <Footer config={this.props.config} basics={this.props.basics} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: StoreState) => {\n  return { config: state.config, basics: state.basics };\n};\n\nexport default connect(mapStateToProps, {})(Project);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport { StoreState } from '../reducers';\nimport ProjectBasic from './themes/basic/Project';\n\nimport {\n  Config,\n  ProfileSectionsWeb,\n  Project as ProjectType,\n  SlugMap,\n} from '../types/profileWeb';\nimport { ProfileField } from '../types/fields';\nimport { WebThemes } from '../types/themes';\n\ninterface ComponentProps extends RouteComponentProps<{ id: string }> {\n  config: Config;\n  sections: ProfileSectionsWeb;\n  slugMap: SlugMap;\n}\n\ninterface ComponentState {\n  slug: string;\n}\n\nclass Project extends Component<ComponentProps, ComponentState> {\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { slug: this.props.match.params.id };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.props.history.listen((location) => {\n      if (\n        this.props.config.analytics &&\n        this.props.config.analytics.ga &&\n        this.props.config.analytics.ga.enable\n      ) {\n        ReactGA.initialize(this.props.config.analytics.ga.trackingId);\n        ReactGA.set({ page: location.pathname });\n        ReactGA.pageview(location.pathname);\n      }\n    });\n  }\n\n  pageContent = (): ProjectType | undefined => {\n    const idx = this.props.slugMap[ProfileField.Projects as string][\n      this.state.slug\n    ].position;\n\n    if (\n      this.props.sections.projects &&\n      this.props.sections.projects.list[idx].render &&\n      this.props.sections.projects.list[idx].value.webPage\n    ) {\n      return this.props.sections.projects.list[idx].value;\n    }\n  };\n\n  renderPage = () => {\n    if (this.props.config.theme.render) {\n      switch (this.props.config.theme.value) {\n        case WebThemes.BASIC:\n          const data = this.pageContent();\n          return data ? <ProjectBasic data={data} /> : <div></div>;\n        default:\n          return <div></div>;\n      }\n    }\n\n    return <div></div>;\n  };\n\n  render() {\n    return this.renderPage();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    sections: state.sections,\n    slugMap: state.slugMap,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Project);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport loadable from '@loadable/component';\nimport LoadSpinner from './LoadSpinner';\nimport SectionLabel from './SectionLabel';\nimport Content from './Content';\nimport Divider from './SectionDivider';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { StoreState } from '../../../reducers';\n\nimport { ProfileField } from '../../../types/fields';\nimport {\n  Basics,\n  Config,\n  Publication as PublicationType,\n} from '../../../types/profileWeb';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  config: Config;\n  basics: Basics;\n  data: PublicationType;\n}\n\nconst LoadableMarkdown = loadable(() => import('../../Markdown'), {\n  fallback: <LoadSpinner below={true} label={''} />,\n});\n\nclass Publication extends Component<ComponentProps> {\n  renderContent = (data: PublicationType): JSX.Element | undefined => {\n    if (data.webPage) {\n      const content = data.webPage.detail;\n      return (\n        <div\n          className=\"content-body text-left\"\n          style={{ margin: '2rem 2rem 0 2rem' }}\n        >\n          <LoadableMarkdown\n            className=\"content-body markdown\"\n            content={content}\n          />\n        </div>\n      );\n    }\n  };\n\n  renderBody = () => {\n    return (\n      <Content id={ProfileField.Projects}>\n        <SectionLabel label={this.props.data.title} />\n        <Divider />\n        {this.renderContent(this.props.data)}\n      </Content>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper-0\">\n        <div className=\"wrapper-1 rounded\">\n          <Header renderSectionsInNavBar={false} />\n          {this.renderBody()}\n        </div>\n        <section\n          className=\"content-section\"\n          style={{ padding: '1.5rem 0 1.5rem 0', background: 'transparent' }}\n        ></section>\n        <Footer config={this.props.config} basics={this.props.basics} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return { config: state.config, basics: state.basics };\n};\n\nexport default connect(mapStateToProps, {})(Publication);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport { StoreState } from '../reducers';\nimport PublicationBasic from './themes/basic/Publication';\n\nimport {\n  Config,\n  ProfileSectionsWeb,\n  Publication as PublicationType,\n  SlugMap,\n} from '../types/profileWeb';\nimport { ProfileField } from '../types/fields';\nimport { WebThemes } from '../types/themes';\n\ninterface ComponentProps extends RouteComponentProps<{ id: string }> {\n  config: Config;\n  sections: ProfileSectionsWeb;\n  slugMap: SlugMap;\n}\n\ninterface ComponentState {\n  slug: string;\n}\n\nclass Publication extends Component<ComponentProps, ComponentState> {\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { slug: this.props.match.params.id };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.props.history.listen((location) => {\n      if (\n        this.props.config.analytics &&\n        this.props.config.analytics.ga &&\n        this.props.config.analytics.ga.enable\n      ) {\n        ReactGA.initialize(this.props.config.analytics.ga.trackingId);\n        ReactGA.set({ page: location.pathname });\n        ReactGA.pageview(location.pathname);\n      }\n    });\n  }\n\n  pageContent = (): PublicationType | undefined => {\n    const idx = this.props.slugMap[ProfileField.Publications as string][\n      this.state.slug\n    ].position;\n\n    if (\n      this.props.sections.publications &&\n      this.props.sections.publications.list[idx].render &&\n      this.props.sections.publications.list[idx].value.webPage\n    ) {\n      return this.props.sections.publications.list[idx].value;\n    }\n  };\n\n  renderPage = () => {\n    if (this.props.config.theme.render) {\n      switch (this.props.config.theme.value) {\n        case WebThemes.BASIC:\n          const data = this.pageContent();\n          return data ? <PublicationBasic data={data} /> : <div></div>;\n        default:\n          return <div></div>;\n      }\n    }\n\n    return <div></div>;\n  };\n\n  render() {\n    return this.renderPage();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    sections: state.sections,\n    slugMap: state.slugMap,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Publication);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport loadable from '@loadable/component';\nimport LoadSpinner from './LoadSpinner';\nimport SectionLabel from './SectionLabel';\nimport Content from './Content';\nimport Divider from './SectionDivider';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { StoreState } from '../../../reducers';\n\nimport { ProfileField } from '../../../types/fields';\nimport {\n  Basics,\n  Config,\n  CustomSection,\n  SlugMap,\n} from '../../../types/profileWeb';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  slug: string;\n  url: string;\n  config: Config;\n  basics: Basics;\n  sections?: CustomSection[];\n  slugMap: SlugMap;\n}\n\nconst LoadableMarkdown = loadable(() => import('../../Markdown'), {\n  fallback: <LoadSpinner below={true} label={''} />,\n});\n\nclass Custom extends Component<ComponentProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  renderBody = (): JSX.Element => {\n    const url = this.props.url.replace('/', '');\n    const idx = this.props.slugMap[ProfileField.Custom as string][url]\n      ?.position;\n\n    if (\n      this.props.sections &&\n      this.props.sections[idx] &&\n      this.props.sections[idx].render &&\n      this.props.sections[idx].webPage?.detail\n    ) {\n      return (\n        <Content id={''}>\n          <SectionLabel label={this.props.sections[idx].label} />\n          <Divider />\n          <div\n            className=\"content-body text-left\"\n            style={{ margin: '2rem 2rem 0 2rem' }}\n          >\n            <LoadableMarkdown\n              className=\"content-body markdown\"\n              content={this.props.sections[idx].webPage?.detail || ''}\n            />\n          </div>\n        </Content>\n      );\n    } else {\n      return (\n        <Content id=\"\">\n          <SectionLabel label=\"\" />\n          <div className=\"\" style={{ margin: '2rem 2rem 0 2rem' }}>\n            <LoadableMarkdown\n              className=\"content-body markdown\"\n              content=\"Page Not Found\"\n            />\n          </div>\n        </Content>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper-0\">\n        <div className=\"wrapper-1 rounded\">\n          <Header renderSectionsInNavBar={false} />\n          {this.renderBody()}\n        </div>\n        <section\n          className=\"content-section\"\n          style={{ padding: '1.5rem 0 1.5rem 0', background: 'transparent' }}\n        ></section>\n        <Footer config={this.props.config} basics={this.props.basics} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    basics: state.basics,\n    sections: state.sections.custom,\n    slugMap: state.slugMap,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Custom);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport { StoreState } from '../reducers';\nimport CustomBasic from './themes/basic/Custom';\n\nimport { Basics, Config } from '../types/profileWeb';\nimport { WebThemes } from '../types/themes';\n\ninterface ComponentProps extends RouteComponentProps<{ id: string }> {\n  config: Config;\n  basics: Basics;\n}\n\nclass Custom extends Component<ComponentProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.props.history.listen((location) => {\n      if (\n        this.props.config.analytics &&\n        this.props.config.analytics.ga &&\n        this.props.config.analytics.ga.enable\n      ) {\n        ReactGA.initialize(this.props.config.analytics.ga.trackingId);\n        ReactGA.set({ page: location.pathname });\n        ReactGA.pageview(location.pathname);\n      }\n    });\n  }\n\n  renderItem = () => {\n    if (this.props.config.theme.value === WebThemes.BASIC) {\n      return (\n        <CustomBasic\n          slug={this.props.match.params.id}\n          url={this.props.match.url}\n        />\n      );\n    }\n\n    return <div></div>;\n  };\n\n  render() {\n    return this.renderItem();\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    config: state.config,\n    basics: state.basics,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Custom);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport List from './List';\nimport Project from './Project';\nimport Publication from './Publication';\nimport Custom from './Custom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './railscasts.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/projects\" component={List} />\n            <Route exact path=\"/publications\" component={List} />\n            <Route exact path=\"/project/:id\" component={Project} />\n            <Route exact path=\"/publication/:id\" component={Publication} />\n            <Route exact path=\"/:id\" component={Custom} />\n            <Route exact path=\"/:id/:id\" component={Custom} />\n            <Route exact path=\"/:id/:id/:id\" component={Custom} />\n            <Route component={Custom} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {})(App);\n","import { combineReducers } from 'redux';\nimport _ from 'lodash';\nimport {\n  Basics,\n  Config,\n  ProfileSectionsWeb,\n  ProfileWeb,\n  SlugMap,\n} from '../types/profileWeb';\nimport profileWebData from '../preprocessors/profile_web.json';\nimport profileResumeData from '../preprocessors/profile_web.json';\nimport { ProfileField } from '../types/fields';\n\nexport interface StoreState {\n  profileResume: ProfileWeb;\n  config: Config;\n  basics: Basics;\n  slugMap: SlugMap;\n  sections: ProfileSectionsWeb;\n}\n\nexport const reducers = combineReducers<StoreState>({\n  profileResume: () => {\n    return { ...profileResumeData };\n  },\n  config: () => {\n    return { ...profileWebData[ProfileField.Config] };\n  },\n  basics: () => {\n    return { ...profileWebData[ProfileField.Basics] };\n  },\n  slugMap: () => {\n    return 'slugMap' in profileWebData\n      ? { ...profileWebData[ProfileField.SlugMap] }\n      : {};\n  },\n  sections: () => {\n    return _.omit(profileWebData, [\n      ProfileField.Config,\n      ProfileField.Basics,\n      ProfileField.SlugMap,\n    ]);\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './components/App';\nimport { reducers } from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","//\n// Regular Expression for URL validation\n//\n// Author: Diego Perini\n// Created: 2010/12/05\n// Updated: 2018/09/12\n// License: MIT\n//\n// Copyright (c) 2010-2018 Diego Perini (http://www.iport.it)\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\n//\n// the regular expression composed & commented\n// could be easily tweaked for RFC compliance,\n// it was expressly modified to fit & satisfy\n// these test for an URL shortener:\n//\n//   http://mathiasbynens.be/demo/url-regex\n//\n// Notes on possible differences from a standard/generic validation:\n//\n// - utf-8 char class take in consideration the full Unicode range\n// - TLDs have been made mandatory so single names like \"localhost\" fails\n// - protocols have been restricted to ftp, http and https only as requested\n//\n// Changes:\n//\n// - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\n//   first and last IP address of each class is considered invalid\n//   (since they are broadcast/network addresses)\n//\n// - Added exclusion of private, reserved and/or local networks ranges\n// - Made starting path slash optional (http://example.com?foo=bar)\n// - Allow a dot (.) at the end of hostnames (http://example.com.)\n// - Allow an underscore (_) character in host/domain names\n// - Check dot delimited parts length and total length\n// - Made protocol optional, allowed short syntax //\n//\n// Compressed one-line versions:\n//\n// Javascript regex version\n//\n// /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n//\n// PHP version (uses % symbol as delimiter)\n//\n// %^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\x{00a1}-\\x{ffff}][a-z0-9\\x{00a1}-\\x{ffff}_-]{0,62})?[a-z0-9\\x{00a1}-\\x{ffff}]\\.)+(?:[a-z\\x{00a1}-\\x{ffff}]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$%iuS\n//\nvar re_weburl = new RegExp(\n  '^' +\n    // protocol identifier (optional)\n    // short syntax // still required\n    '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)' +\n    // user:pass BasicAuth (optional)\n    '(?:\\\\S+(?::\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broadcast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host & domain names, may end with dot\n    // can be replaced by a shortest alternative\n    // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n    '(?:' +\n    '(?:' +\n    '[a-z0-9\\\\u00a1-\\\\uffff]' +\n    '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}' +\n    ')?' +\n    '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.' +\n    ')+' +\n    // TLD identifier name, may end with dot\n    '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)' +\n    ')' +\n    // port number (optional)\n    '(?::\\\\d{2,5})?' +\n    // resource path (optional)\n    '(?:[/?#]\\\\S*)?' +\n    '$',\n  'i'\n);\n\nexport default re_weburl;\n","import Config from './types/config';\n\nconst config: Config = {\n  imagesPath: 'images',\n  videosPath: 'videos',\n  filesPath: 'files',\n  maxItemsToRenderInHomePage: {\n    publications: 5,\n    projects: 5,\n  },\n};\n\nexport default config;\n","import React, { Component, ReactNode } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ImageGallery from 'react-image-gallery';\nimport ReactPlayer from 'react-player';\nimport { Modal } from 'react-bootstrap';\nimport Highlight from 'react-highlight.js';\nimport re_weburl from '../auxiliaries/regex-weburl';\nimport config from '../config';\nimport { isRenderVideo, isLinkAFile } from '../auxiliaries/regex';\n\nimport 'react-image-gallery/styles/css/image-gallery.css';\n\ninterface ComponentProps {\n  className: string;\n  content: string;\n}\n\ninterface ComponentState {\n  showModal: boolean;\n  imageStartIndex: number;\n}\n\ninterface LinkProps {\n  href: string;\n  title?: string;\n  children?: ReactNode;\n}\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  title?: string;\n  children?: ReactNode;\n}\n\ninterface CodeProps {\n  language: string;\n  value: string;\n}\n\nconst MyGallery = ({\n  images,\n  startIndex,\n}: {\n  images: { original: string; thumbnail: string }[];\n  startIndex: number;\n}) => {\n  return (\n    <ImageGallery\n      items={images}\n      slideOnThumbnailOver={true}\n      startIndex={startIndex}\n    />\n  );\n};\n\nclass Markdown extends Component<ComponentProps, ComponentState> {\n  private images: { original: string; thumbnail: string }[] = [];\n  private componentMounted = false;\n  private imageCounter = 0;\n\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = { showModal: false, imageStartIndex: 0 };\n  }\n\n  componentDidMount() {\n    this.componentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.images = [];\n  }\n\n  renderImage = (imageProps: ImageProps): JSX.Element => {\n    let imageAlt = imageProps.alt;\n    let imageSrc = imageProps.src;\n    let imageTitle = imageProps.title;\n    let imageCount = this.imageCounter;\n\n    if (!re_weburl.test(imageProps.src)) {\n      imageSrc = `${process.env.PUBLIC_URL}/${config.imagesPath}/${imageProps.src}`;\n    }\n\n    if (!this.componentMounted)\n      this.images = [\n        ...this.images,\n        { original: imageSrc, thumbnail: imageSrc },\n      ];\n\n    this.imageCounter++;\n\n    return (\n      <>\n        <div key={imageCount}>\n          <div className=\"gallery-item\">\n            <img\n              className=\"img-fluid rounded\"\n              alt={imageAlt}\n              src={imageSrc}\n              title={imageTitle}\n              onClick={() =>\n                this.setState({ showModal: true, imageStartIndex: imageCount })\n              }\n            />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  renderCode = (codeProps: CodeProps): JSX.Element => {\n    return (\n      <Highlight language={codeProps.language}>{codeProps.value}</Highlight>\n    );\n  };\n\n  renderLink = (linkProps: LinkProps) => {\n    const renderVideo = linkProps.title\n      ? isRenderVideo(linkProps.title)\n      : false;\n\n    if (renderVideo) {\n      let videoUrl = linkProps.href;\n\n      if (!re_weburl.test(videoUrl)) {\n        videoUrl = `${process.env.PUBLIC_URL}/${config.videosPath}/${videoUrl}`;\n      }\n\n      return (\n        <div className=\"row no-gutters\">\n          <div className=\"col-offset-lg-3 col-lg-6 col-sm-12\">\n            <div className=\"embed-responsive embed-responsive-1-by-1\">\n              <ReactPlayer url={videoUrl} />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      let url = linkProps.href;\n      if (!re_weburl.test(url)) {\n        url = `${process.env.PUBLIC_URL}/${linkProps.href}`;\n\n        if (linkProps.title) {\n          if (isLinkAFile(linkProps.title)) {\n            url = `${process.env.PUBLIC_URL}/${config.filesPath}/${linkProps.href}`;\n          }\n        }\n      }\n\n      return (\n        <a href={url} title={linkProps.title}>\n          {linkProps.children}\n        </a>\n      );\n    }\n  };\n\n  renderers = {\n    image: this.renderImage,\n    imageReference: this.renderImage,\n    code: this.renderCode,\n    link: this.renderLink,\n    linkReference: this.renderLink,\n  };\n\n  renderSectionBody = (content: string): JSX.Element => {\n    this.imageCounter = 0;\n    return (\n      <div className={`content-body markdown ${this.props.className}`}>\n        <ReactMarkdown\n          source={content}\n          renderers={this.renderers}\n        ></ReactMarkdown>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {this.renderSectionBody(this.props.content)}\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n          size=\"lg\"\n          centered\n        >\n          <Modal.Body>\n            <MyGallery\n              images={this.images}\n              startIndex={this.state.imageStartIndex}\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Markdown;\n","const isRenderVideo = (title: string): boolean => {\n  return new RegExp('show{1}[._#*-]*video{1}').test(title);\n};\n\nconst isLinkAFile = (title: string): boolean => {\n  return new RegExp('file{1}').test(title);\n};\n\nexport { isRenderVideo, isLinkAFile };\n"],"sourceRoot":""}